resource "aws_appsync_graphql_api" "AppSync" {
  name                = "pr-${var.pr_number}-${var.appsync_name}"
  authentication_type = "AWS_LAMBDA"
  lambda_authorizer_config {
    authorizer_uri                   = data.aws_lambda_function.authorizer_lambda.arn
    authorizer_result_ttl_in_seconds = var.authorizer_ttl
  }
  additional_authentication_provider {
    authentication_type = "API_KEY"
  }
  ### we have been told that this auth is not in use anymore
  # additional_authentication_provider {
  #   authentication_type = "AMAZON_COGNITO_USER_POOLS"
  #   user_pool_config {
  #     user_pool_id = var.user_pool_id
  #   }
  # }

  schema = "schema { \n  query: Query \n  mutation: Mutation \n  subscription: Subscription  \n}\n\ndirective @aws_subscribe(mutations: [String!]!) on FIELD_DEFINITION\n\ndirective @aws_api_key on FIELD_DEFINITION | OBJECT\n\ndirective @aws_lambda on FIELD_DEFINITION | OBJECT\n\ntype Comment @aws_api_key @aws_lambda {\n  timestamp: String\n  text: String\n  author: String\n  commentId: String\n}\n\ntype Connection {\n  items: [Practice]\n  nextToken: String\n}\n\ninput CreateEventInput {\n  calendarId: String!\n  location: String\n  title: String\n  description: String\n  start: String!\n  end: String\n  recurrenceRule: String\n  isAllDay: Boolean\n  practiceId: String\n  timezone: String\n  patientId: String\n  isAppointment: String\n  numParticipants: Int\n  participantsString: String\n  includeVideoCall: Boolean\n  zoomUrl: String\n}\n\ninput CreateNoteInput {\n  patientIdEventTimestamp: String\n  patientIdNoteTypeStatusTimestamp: String\n  practiceId: String!\n  patientId: String\n  sk: String!\n  noteId: String\n  eventTimestamp: String\n  recordCreationTimestamp: String\n  noteVersion: Int\n  lastUpdatedTimestamp: String\n  status: String\n  signed: String\n  author: String\n  noteType: String\n  schema: String\n  files: [String]\n  data: NoteDataInput\n  hidden: Boolean\n}\n\ninput CreateNotificationInput {\n  practiceId: String!\n  sk: String!\n  notificationType: String\n  notificationStatus: String\n  assigned: String\n  author: String\n  comments: [String]\n  createdAt: String\n  dueOn: String\n  isLatestVersion: Boolean\n  lastUpdated: String\n  lastUpdatedBy: String\n  notificationId: String\n  notificationVersion: Int\n  patientId: String\n  previouslyAssigned: [String]\n  relatedTo: String\n  text: String\n  urgent: Boolean\n  data: NotificationDataInput\n}\n\ninput CreatePracticeInput {\n  practiceId: String!\n  dataType: String!\n}\n\ninput DeleteEventInput {\n  calendarId: String!\n  eventId: String!\n  practiceId: String\n}\n\ninput DeletePracticeInput {\n  practiceId: String!\n  dataType: String!\n}\n\ntype DraftData @aws_api_key @aws_lambda {\n  noteId: String\n  patientId: String\n}\n\ninput DraftDataInput {\n  noteId: String\n  patientId: String\n}\n\ntype EmailParticipant @aws_api_key @aws_lambda {\n  email: String\n  name: String\n}\n\ninput EmailParticipantInput {\n  email: String\n  name: String\n}\n\ntype Event @aws_lambda {\n  eventId: String\n  calendarId: String\n  location: String\n  title: String\n  description: String\n  start: String\n  end: String\n  isAllDay: Boolean\n  recurrenceRule: String\n  practiceId: String\n  patientId: String\n  isAppointment: String\n  numParticipants: Int\n  participantsString: String\n  videoCall: VideoCall\n  zoomUrl: String\n}\n\ntype FaxData @aws_api_key @aws_lambda {\n  messageId: String\n  text: String\n  faxNumber: String\n  faxCsid: String\n  faxCallerId: String\n  s3Path: String\n}\n\ninput FaxDataInput {\n  messageId: String\n  faxNumber: String\n  faxCsid: String\n  faxCallerId: String\n  s3Path: String\n}\n\ntype FormData @aws_api_key @aws_lambda {\n  noteId: String\n  patientId: String\n  intakeId: String\n}\n\ninput FormDataInput {\n  noteId: String\n  patientId: String\n  intakeId: String\n}\n\ninput GetEventsInput {\n  show_cancelled: String\n  event_id: String\n  calendar_id: String\n  description: String\n  title: String\n  location: String\n  busy: String\n  starts_before: String\n  starts_after: String\n  ends_before: String\n  ends_after: String\n  metadata_key: String\n  metadata_value: String\n  expand_recurring: String\n}\n\ntype HGAction @aws_api_key @aws_lambda {\n  reference: String\n  display: String\n  chargeId: String\n}\n\ninput HGActionInput {\n  reference: String\n  display: String\n  chargeId: String\n}\n\ntype HGDelivery @aws_api_key @aws_lambda {\n  url: String\n  valueBoolean: Boolean\n}\n\ninput HGDeliveryInput {\n  url: String\n  valueBoolean: Boolean\n}\n\ntype InsuranceCoding @aws_api_key @aws_lambda {\n  system: String\n  code: String\n  display: String\n}\n\ninput InsuranceCodingInput {\n  system: String\n  code: String\n  display: String\n}\n\ntype LabResultsData @aws_api_key @aws_lambda {\n  noteId: String\n  patientId: String\n}\n\ninput LabResultsDataInput {\n  noteId: String\n  patientId: String\n}\n\ntype Mutation {\n  createEvent(input: CreateEventInput!): Event @aws_lambda\n  updateEvent(input: UpdateEventInput!): Event @aws_lambda\n  deleteEvent(input: DeleteEventInput!): Event @aws_lambda\n  createNote(input: CreateNoteInput!): Note @aws_api_key\n  updateNote(input: UpdateNoteInput!): Note @aws_api_key\n  createPractice(input: CreatePracticeInput!): Practice @aws_api_key\n  updatePractice(input: UpdatePracticeInput!): Practice @aws_lambda\n  deletePractice(input: DeletePracticeInput!): Practice @aws_api_key\n  createNotification(input: CreateNotificationInput!): Notification @aws_api_key\n  updateNotification(input: UpdateNotificationInput!): Notification @aws_api_key\n}\n\ntype Note @aws_api_key @aws_lambda {\n  patientIdEventTimestamp: String\n  patientIdNoteTypeStatusTimestamp: String\n  practiceId: String!\n  patientId: String\n  sk: String!\n  noteId: String\n  eventTimestamp: String\n  recordCreationTimestamp: String\n  noteVersion: Int\n  lastUpdatedTimestamp: String\n  status: String\n  signed: String\n  author: String\n  noteType: String\n  schema: String\n  files: [String]\n  hidden: Boolean\n  data: NoteData\n}\n\ntype NoteConnection {\n  items: [Note]\n  nextToken: String\n}\n\ntype NoteData @aws_api_key @aws_lambda {\n  text: String\n  formattedText: String\n  to: String\n  from: String\n  subject: String\n  cc: [EmailParticipant]\n  bcc: [EmailParticipant]\n  emailId: String\n  threadId: String\n  files: [String]\n  bmi: Float\n  systolic: Float\n  diastolic: Float\n  growthPercentile: Float\n  heartRate: Float\n  height: Float\n  heightUnit: String\n  respiratoryRate: Float\n  spo2: Float\n  headCircumference: Float\n  temp: Float\n  tempUnit: String\n  weight: Float\n  weightUnit: String\n  inventoryId: String\n  quantityPrescribed: Float\n  lotNumber: String\n  lotExpiration: String\n  chargeItemId: String\n  invoiceId: String\n  ndcNumber: String\n  patientName: String\n  medicationName: String\n  strength: String\n  form: String\n  frequency: String\n  daysOfTreatment: Float\n  providerName: String\n  providerId: String\n  providerNpi: String\n  providerDeaNumber: String\n  dateFulfilled: String\n  datePrescribed: String\n  numberOfRefills: Float\n  useByDate: String\n  priceForPatient: Float\n  costToDoctor: Float\n  instructions: String\n  isExternalPrescription: String\n  rxNumber: String\n  rxId: String\n  ndc: String\n  ddi: Boolean\n  rxNorm: String\n  routeOfAdministration: String\n  transmissionMethod: String\n  daw: String\n  end: String\n  createdBy: VRxAuthor\n  authorizedBy: VRxAuthor\n  prescriber: VRxAuthor\n  pharmacy: VPharmacy\n  id: String\n  sendMethod: String\n  clientId: Int\n  created: String\n  formId: String\n  formName: String\n  formUrl: String\n  url: String\n  submissionData: SubmissionData\n  coverPageId: String\n  recipientName: String\n  senderName: String\n  tags: [String]\n  lastUpdated: String\n  billedToCode: String\n  labAccountId: String\n  collectedAt: String\n  billedToText: String\n  orderedFrom: String\n  insuranceCoding: [InsuranceCoding]\n  insuranceCodeText: String\n  delivery: [HGDelivery]\n  hgId: String\n  reportId: String\n  labReferenceId: String\n  orderStatus: String\n  intent: String\n  actions: [HGAction]\n  author: String\n  authoredOn: String\n  hgAuthorId: String\n  paymentStatus: String\n  paymentNoteId: String\n  basedOn: [HGAction]\n  valueString: String\n  interpretation: [String]\n  payments: [Payment]\n}\n\ninput NoteDataInput {\n  text: String\n  formattedText: String\n  to: String\n  from: String\n  subject: String\n  emailTo: [EmailParticipantInput]\n  cc: [EmailParticipantInput]\n  bcc: [EmailParticipantInput]\n  emailId: String\n  threadId: String\n  files: [String]\n  bmi: Float\n  systolic: Float\n  diastolic: Float\n  growthPercentile: Float\n  heartRate: Float\n  height: Float\n  heightUnit: String\n  respiratoryRate: Float\n  spo2: Float\n  headCircumference: Float\n  temp: Float\n  tempUnit: String\n  weight: Float\n  weightUnit: String\n  inventoryId: String\n  quantityPrescribed: Float\n  lotNumber: String\n  lotExpiration: String\n  chargeItemId: String\n  invoiceId: String\n  ndcNumber: String\n  patientName: String\n  medicationName: String\n  strength: String\n  form: String\n  frequency: String\n  daysOfTreatment: Float\n  providerName: String\n  providerId: String\n  providerNpi: String\n  providerDeaNumber: String\n  dateFulfilled: String\n  datePrescribed: String\n  numberOfRefills: Float\n  useByDate: String\n  priceForPatient: Float\n  costToDoctor: Float\n  instructions: String\n  isExternalPrescription: String\n  rxNumber: String\n  rxId: String\n  ndc: String\n  ddi: Boolean\n  rxNorm: String\n  routeOfAdministration: String\n  transmissionMethod: String\n  daw: String\n  end: String\n  createdBy: VRxAuthorInput\n  authorizedBy: VRxAuthorInput\n  prescriber: VRxAuthorInput\n  pharmacy: VPharmacyInput\n  id: String\n  sendMethod: String\n  clientId: Int\n  created: String\n  formId: String\n  formName: String\n  formUrl: String\n  url: String\n  submissionData: SubmissionDataInput\n  coverPageId: String\n  recipientName: String\n  senderName: String\n  tags: [String]\n  lastUpdated: String\n  billedToCode: String\n  labAccountId: String\n  collectedAt: String\n  billedToText: String\n  orderedFrom: String\n  insuranceCoding: [InsuranceCodingInput]\n  insuranceCodeText: String\n  delivery: [HGDeliveryInput]\n  hgId: String\n  reportId: String\n  labReferenceId: String\n  orderStatus: String\n  intent: String\n  actions: [HGActionInput]\n  author: String\n  authoredOn: String\n  hgAuthorId: String\n  paymentNoteId: String\n  basedOn: [HGActionInput]\n  valueString: String\n  interpretation: [String]\n  paymentStatus: String\n  payments: [PaymentInput]\n}\n\ntype Notification @aws_api_key @aws_lambda {\n  practiceId: String!\n  sk: String!\n  notificationType: String\n  notificationStatus: String\n  assigned: String\n  author: String\n  comments: [String]\n  createdAt: String\n  dueOn: String\n  isLatestVersion: Boolean\n  lastUpdated: String\n  lastUpdatedBy: String\n  notificationId: String\n  notificationVersion: Int\n  patientId: String\n  previouslyAssigned: [String]\n  relatedTo: String\n  text: String\n  urgent: Boolean\n  data: NotificationData\n}\n\ntype NotificationData @aws_api_key @aws_lambda {\n  FAX: FaxData\n  PHONE_CALL: PhoneCallData\n  SMS: SmsData\n  LAB_RESULTS: LabResultsData\n  DRAFT: DraftData\n  FORM: FormData\n}\n\ninput NotificationDataInput {\n  FAX: FaxDataInput\n  PHONE_CALL: PhoneCallDataInput\n  SMS: SmsDataInput\n  LAB_RESULTS: LabResultsDataInput\n  DRAFT: DraftDataInput\n  FORM: FormDataInput\n}\n\ntype Payment @aws_api_key @aws_lambda {\n  id: String\n  status: String\n}\n\ninput PaymentInput {\n  id: String\n  status: String\n}\n\ntype PhoneCallData @aws_api_key @aws_lambda {\n  to: String\n  from: String\n  timestamp: String\n  voicemailKey: String\n}\n\ninput PhoneCallDataInput {\n  to: String\n  from: String\n  timestamp: String\n  voicemailKey: String\n}\n\ntype Practice @aws_lambda @aws_api_key {\n  practiceId: String!\n  address: String\n  admin: String\n  bucketName: String\n  createdAt: String\n  creator: String\n  kmsArn: String\n  lastUpdated: String\n  onCallNumbers: String\n  practiceName: String\n  sk: String\n  tags: [String]\n  userPoolId: String\n}\n\ntype Query {\n  getEvents(input: GetEventsInput): [Event] @aws_lambda\n  getNote(practiceId: String!, sk: String!): Note @aws_api_key\n  listNotes(filter: TableNoteFilterInput, limit: Int, nextToken: String): NoteConnection @aws_api_key\n  queryNotesByPatientIdEventTimestampNoteTypeIndex(practiceId: String!, first: Int, after: String): NoteConnection @aws_api_key\n  queryNotesByPatientIdNoteTypeStatusTimestampIndex(practiceId: String!, first: Int, after: String): NoteConnection @aws_api_key\n  getPractice(dataType: String!): Practice @aws_lambda\n  listPractices(filter: TablePracticeFilterInput, limit: Int, nextToken: String): Connection @aws_api_key\n}\n\ntype SmsData @aws_api_key @aws_lambda {\n  to: String\n  from: String\n  timestamp: String\n  patients: [String]\n  files: [String]\n}\n\ninput SmsDataInput {\n  to: String\n  from: String\n  timestamp: String\n  patients: [String]\n  files: [String]\n}\n\ntype SubmissionData @aws_api_key @aws_lambda {\n  DateSubmitted: Float\n  DateCreated: Float\n  Status: String\n}\n\ninput SubmissionDataInput {\n  DateSubmitted: Float\n  DateCreated: Float\n  Status: String\n}\n\ntype Subscription {\n  onCreateEvent(practiceId: String): Event @aws_subscribe(mutations: [\"createEvent\"]) @aws_lambda\n  onUpdateEvent(practiceId: String): Event @aws_subscribe(mutations: [\"updateEvent\"]) @aws_lambda\n  onDeleteEvent(practiceId: String): Event @aws_subscribe(mutations: [\"deleteEvent\"]) @aws_lambda\n  onCreateNote(practiceId: String, patientId: String, noteType: String): Note @aws_subscribe(mutations: [\"createNote\"]) @aws_api_key @aws_lambda\n  onUpdateNote(practiceId: String, patientId: String, noteId: String, noteType: String): Note @aws_subscribe(mutations: [\"updateNote\"]) @aws_api_key @aws_lambda\n  onCreatePractice(practiceId: String, dataType: String): Practice @aws_subscribe(mutations: [\"createPractice\"]) @aws_api_key\n  onUpdatePractice(practiceId: String, dataType: String): Practice @aws_subscribe(mutations: [\"updatePractice\"]) @aws_lambda\n  onDeletePractice(practiceId: String, dataType: String): Practice @aws_subscribe(mutations: [\"deletePractice\"]) @aws_api_key\n  onCreateNotification(practiceId: String, notificationType: String, notificationStatus: String): Notification @aws_subscribe(mutations: [\"createNotification\"]) @aws_api_key @aws_lambda\n  onUpdateNotification(practiceId: String, notificationType: String, notificationStatus: String): Notification @aws_subscribe(mutations: [\"updateNotification\"]) @aws_api_key @aws_lambda\n}\n\ninput TableBooleanFilterInput {\n  ne: Boolean\n  eq: Boolean\n}\n\ninput TableFloatFilterInput {\n  ne: Float\n  eq: Float\n  le: Float\n  lt: Float\n  ge: Float\n  gt: Float\n  contains: Float\n  notContains: Float\n  between: [Float]\n}\n\ninput TableIDFilterInput {\n  ne: ID\n  eq: ID\n  le: ID\n  lt: ID\n  ge: ID\n  gt: ID\n  contains: ID\n  notContains: ID\n  between: [ID]\n  beginsWith: ID\n}\n\ninput TableIntFilterInput {\n  ne: Int\n  eq: Int\n  le: Int\n  lt: Int\n  ge: Int\n  gt: Int\n  contains: Int\n  notContains: Int\n  between: [Int]\n}\n\ninput TableNoteFilterInput {\n  patientIdEventTimestamp: TableStringFilterInput\n  patientIdNoteTypeStatusTimestamp: TableStringFilterInput\n  practiceId: TableStringFilterInput\n  patientId: TableStringFilterInput\n  sk: TableStringFilterInput\n  noteId: TableStringFilterInput\n  eventTimestamp: TableStringFilterInput\n  recordCreationTimestamp: TableStringFilterInput\n  noteVersion: TableIntFilterInput\n  lastUpdatedTimestamp: TableStringFilterInput\n  status: TableStringFilterInput\n  signed: TableStringFilterInput\n  author: TableStringFilterInput\n  noteType: TableStringFilterInput\n  schema: TableStringFilterInput\n}\n\ninput TablePracticeFilterInput {\n  practiceId: TableStringFilterInput\n  dataType: TableStringFilterInput\n}\n\ninput TableStringFilterInput {\n  ne: String\n  eq: String\n  le: String\n  lt: String\n  ge: String\n  gt: String\n  contains: String\n  notContains: String\n  between: [String]\n  beginsWith: String\n}\n\ninput UpdateEventInput {\n  eventId: String!\n  calendarId: String!\n  location: String\n  title: String\n  description: String\n  start: String!\n  end: String\n  recurrenceRule: String\n  isAllDay: Boolean\n  practiceId: String\n  timezone: String\n  patientId: String\n  isAppointment: String\n  numParticipants: Int\n  participantsString: String\n  includeVideoCall: String\n  videoCall: VideoCallInput\n  zoomUrl: String\n}\n\ninput UpdateNoteInput {\n  patientIdEventTimestamp: String\n  patientIdNoteTypeStatusTimestamp: String\n  practiceId: String!\n  patientId: String\n  sk: String!\n  noteId: String\n  eventTimestamp: String\n  recordCreationTimestamp: String\n  noteVersion: Int\n  lastUpdatedTimestamp: String\n  status: String\n  signed: String\n  author: String\n  noteType: String\n  schema: String\n  files: [String]\n  data: NoteDataInput\n  hidden: Boolean\n}\n\ninput UpdateNotificationInput {\n  practiceId: String!\n  sk: String!\n  notificationType: String\n  notificationStatus: String\n  assigned: String\n  author: String\n  comments: [String]\n  createdAt: String\n  dueOn: String\n  isLatestVersion: Boolean\n  lastUpdated: String\n  lastUpdatedBy: String\n  notificationId: String\n  notificationVersion: Int\n  patientId: String\n  previouslyAssigned: [String]\n  relatedTo: String\n  text: String\n  urgent: Boolean\n  data: NotificationDataInput\n}\n\ninput UpdatePracticeInput {\n  practiceId: String!\n  dataType: String!\n  address: String\n  admin: String\n  bucketName: String\n  createdAt: String\n  creator: String\n  kmsArn: String\n  lastUpdated: String\n  onCallNumbers: String\n  practiceName: String\n  tags: [String]\n  userPoolId: String\n}\n\ntype VAddress @aws_api_key @aws_lambda {\n  line1: String\n  city: String\n  state: String\n  zipCode: String\n}\n\ninput VAddressInput {\n  line1: String\n  city: String\n  state: String\n  zipCode: String\n}\n\ntype VideoCall {\n  provider: String\n  details: VideoCallDetails\n}\n\ntype VideoCallDetails {\n  phone: [String]\n  pin: String\n  url: String\n}\n\ninput VideoCallDetailsInput {\n  phone: [String]\n  pin: String\n  url: String\n}\n\ninput VideoCallInput {\n  provider: String\n  details: VideoCallDetailsInput\n}\n\ntype VPharmacy @aws_api_key @aws_lambda {\n  name: String\n  id: String\n  ncpdp: String\n  address: VAddress\n}\n\ninput VPharmacyInput {\n  name: String\n  id: String\n  ncpdp: String\n  address: VAddressInput\n}\n\ntype VRxAuthor @aws_api_key @aws_lambda {\n  name: String\n  id: String\n}\n\ninput VRxAuthorInput {\n  name: String\n  id: String\n}\n"
}

### we tested this and it takes 7 more minutes than usal to deploy
# resource "aws_appsync_domain_name" "appsync_domain_name" {
#   domain_name     = "pr-${var.pr_number}-${var.appsync_name}.${var.appsync_domain}"
#   certificate_arn = var.appsync_certificate_arn
# }

# resource "aws_appsync_domain_name_api_association" "appsync_domain_name_association" {
#   api_id      = aws_appsync_graphql_api.AppSync.id
#   domain_name = "pr-${var.pr_number}-${var.appsync_name}.${var.appsync_domain}"
#   depends_on  = [aws_appsync_domain_name.appsync_domain_name, aws_appsync_graphql_api.AppSync]
# }

resource "time_rotating" "expiration_in_rfc3339" {
  rotation_days = var.appsync_apikey_expiration_days
}

resource "aws_appsync_api_key" "AppSyncApiKey" {
  api_id     = aws_appsync_graphql_api.AppSync.id
  expires    = time_rotating.expiration_in_rfc3339.rotation_rfc3339
  depends_on = [aws_appsync_graphql_api.AppSync, time_rotating.expiration_in_rfc3339]
}

# module "practices_datasource_iam_role" {
#   source = "../iam"

#   role_name          = "pr-${var.pr_number}-${var.practices_datasource_name}"
#   service_name       = var.practices_datasource_service_name
#   set_of_permissions = var.practices_role_set_of_permissions
#   object_arn         = var.practices_dynamodb_table_arn
# }

// IAM ROLE

data "aws_iam_policy_document" "practices_assume_role" {
  statement {
    effect = "Allow"

    principals {
      type        = "Service"
      identifiers = ["appsync.amazonaws.com"]
    }

    actions = ["sts:AssumeRole"]
  }
}

resource "aws_iam_role" "practices_datasource_iam_role" {
  name               = "pr-${var.pr_number}-${var.practices_datasource_name}"
  assume_role_policy = data.aws_iam_policy_document.practices_assume_role.json
  depends_on         = [data.aws_iam_policy_document.practices_assume_role]
}

data "aws_iam_policy_document" "practices_iam_policy_document" {
  statement {
    effect    = "Allow"
    actions   = var.practices_role_set_of_permissions
    resources = [var.practices_dynamodb_table_arn]
  }
}

resource "aws_iam_role_policy" "iam_role_policy" {
  name       = "${var.practices_datasource_name}_iam_role_policy"
  role       = aws_iam_role.practices_datasource_iam_role.id
  policy     = data.aws_iam_policy_document.practices_iam_policy_document.json
  depends_on = [data.aws_iam_policy_document.practices_iam_policy_document, aws_iam_role.practices_datasource_iam_role]
}


resource "aws_appsync_datasource" "KeenAppSyncpracticesdb" {
  name             = var.practices_datasource_name
  api_id           = aws_appsync_graphql_api.AppSync.id
  service_role_arn = aws_iam_role.practices_datasource_iam_role.arn
  type             = "AMAZON_DYNAMODB"
  dynamodb_config {
    table_name = var.practices_dynamodb_table_name
  }
  depends_on = [aws_iam_role.practices_datasource_iam_role]
}
